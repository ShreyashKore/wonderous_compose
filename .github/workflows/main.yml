name: Main

on:
  release:
    types: [ published, prereleased ]
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_android_linux_web:
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Create Key.properties File
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > ./key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> ./key.properties
          echo "alias=${{ secrets.KEY_ALIAS }}" >> ./key.properties
          echo "path=${{ runner.temp }}/key.jks" >> ./key.properties
      - name: Create Local.properties File
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAP_API_KEY }}" >> ./local.properties
      - name: Create Android keystore File
        run: |
          echo -n "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > $RUNNER_TEMP/key.jks
      - name: Build with Gradle
        run:
          ./gradlew build
      - name: Build APK
        run: ./gradlew composeApp:assembleRelease
      - name: Build Deb
        run: ./gradlew composeApp:packageDeb
      - name: Build WASM
        run: ./gradlew composeApp:wasmJsBrowserDistribution
      - name: Build JS
        run: ./gradlew composeApp:jsBrowserDistribution
      - name: Upload Release Asset
        if: ${{ github.event_name == 'release' }}
        env:
          VERSION: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          JS_ZIP="com.shreyashkore.wonderouscompose_$VERSION-JS.zip"
          WASM_ZIP="com.shreyashkore.wonderouscompose_$VERSION-WASM.zip"
          (cd ./composeApp/build/dist && zip -r JS_ZIP js)
          (cd ./composeApp/build/dist && zip -r WASM_ZIP wasmJs)
          gh release upload $GITHUB_REF_NAME ./composeApp/build/dist/JS_ZIP
          gh release upload $GITHUB_REF_NAME ./composeApp/build/dist/WASM_ZIP
          gh release upload $GITHUB_REF_NAME ./composeApp/build/outputs/apk/release/composeApp-release.apk
          gh release upload $GITHUB_REF_NAME ./composeApp/build/compose/binaries/main/deb/com.shreyashkore.wonderouscompose_$VERSION-1_amd64.deb

  build_windows:
    permissions:
      contents: write
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Create Key.properties File
        run: |
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" > ./key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> ./key.properties
          echo "alias=${{ secrets.KEY_ALIAS }}" >> ./key.properties
          echo "path=${{ runner.temp }}/key.jks" >> ./key.properties
      - name: Create Android keystore File
        shell: bash
        run: |
          echo -n "${{ secrets.ANDROID_KEYSTORE }}" | base64 -d > $RUNNER_TEMP/key.jks
      - name: Create Local.properties File
        run: |
          echo "MAPS_API_KEY=${{ secrets.MAP_API_KEY }}" >> ./local.properties
      - name: Build with Gradle
        run: ./gradlew build
      - name: Build Msi
        run: |
          ./gradlew composeApp:packageMsi
          cd ./composeApp/build/compose/binaries/
          ls -R
      - name: Upload Release Asset
        env:
          VERSION: ${{ github.ref_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.event_name == 'release' }}
        run: |
          gh release upload $GITHUB_REF_NAME ./composeApp/build/compose/binaries/main/msi/com.shreyashkore.wonderouscompose_$VERSION_amd64.msi

#  build_ios:
#    runs-on: macos-latest
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#      - name: "Setup Gradle"
#        uses: gradle/gradle-build-action@v2
#      - name: "Build xcworkspace"
#        run: ./gradlew podInstall